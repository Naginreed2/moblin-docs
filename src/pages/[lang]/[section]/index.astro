---
import { getCollection } from 'astro:content';
import { AstroError } from 'astro/errors';

export async function getStaticPaths() {
  const allDocs = await getCollection('docs');
  const paths = new Set();

  allDocs.forEach(entry => {
    const [lang, section] = entry.id.split('/');
    if (lang && section) {
      paths.add(`${lang}/${section}`);
    }
  });

  return Array.from(paths).map(path => {
    const [lang, section] = path.split('/');
    return { params: { lang, section } };
  });
}

const { lang, section } = Astro.params;

if (!lang || !section) {
  throw new AstroError('Missing lang or section parameter.');
}

const allDocs = await getCollection('docs');

const docsInSection = allDocs.filter(entry => {
  const [entryLang, entrySection] = entry.id.split('/');
  return entryLang === lang &&
    entrySection === section &&
    !entry.id.endsWith('/index') &&
    (entry.data.sidebar?.hidden === false || entry.data.sidebar?.hidden === undefined);
});

docsInSection.sort((a, b) => {
  const orderA = a.data.sidebar?.order ?? 999;
  const orderB = b.data.sidebar?.order ?? 999;
  return orderA - orderB;
});

if (docsInSection.length === 0) {
  throw new AstroError(`No visible pages in ${lang}/${section}`);
}

const firstSlug = docsInSection[0].id.split('/').pop();
const redirectTo = `/${lang}/${section}/${firstSlug}/`;

if (import.meta.env.SSR) {
  return new Response(null, {
    status: 302,
    headers: {
      Location: redirectTo,
    },
  });
}
---

<p>Redirecting to <a href={redirectTo}>{redirectTo}</a>...</p>
